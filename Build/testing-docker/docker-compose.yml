version: '2.3'
services:
   cgl:
      image: typo3/core-testing-${DOCKER_PHP_IMAGE}:latest
      user: "${HOST_UID}"
      volumes:
         - ${ROOT_DIR}:${ROOT_DIR}
      working_dir: ${ROOT_DIR}
      extra_hosts:
         - "host.docker.internal:host-gateway"
      command: >
         /bin/sh -c "
           if [ ${SCRIPT_VERBOSE} -eq 1 ]; then
             set -x
           fi
           php -v | grep '^PHP';
           PHP_CS_FIXER_IGNORE_ENV=1 php -dxdebug.mode=off \
             .Build/bin/php-cs-fixer fix \
               -v \
               ${CGLCHECK_DRY_RUN} \
               --config=Build/php-cs-fixer/.php-cs-fixer.dist.php  \
               --using-cache=no .
         "

   composer_update:
      image: typo3/core-testing-${DOCKER_PHP_IMAGE}:latest
      user: "${HOST_UID}"
      volumes:
         - ${ROOT_DIR}:${ROOT_DIR}
      working_dir: ${ROOT_DIR}
      extra_hosts:
         - "host.docker.internal:host-gateway"
      environment:
         COMPOSER_CACHE_DIR: ".Build/.cache/composer"
      command: >
         /bin/sh -c "
           if [ ${SCRIPT_VERBOSE} -eq 1 ]; then
             set -x
           fi
           php -v | grep '^PHP';
         
           if [ ${TYPO3_VERSION} == "11.5" ]; then
               composer rem --dev "sbuerk/typo3-cmscomposerinstallers-testingframework-bridge" --no-update
               composer req --dev --no-update \
                  typo3/cms-composer-installers:^3.0
               composer req typo3/cms-core:^11.5 --no-update
           fi
           if [ ${TYPO3_VERSION} == "12.0" ]; then
               composer req --dev --no-update \
                  "sbuerk/typo3-cmscomposerinstallers-testingframework-bridge":^0.0.1
               composer req typo3/cms-core:~12.0@dev -W --no-update
           fi         
           if [ ${TYPO3_VERSION} == "main" ]; then
               composer req --dev --no-update \
                  "sbuerk/typo3-cmscomposerinstallers-testingframework-bridge":^0.0.1 \
                  typo3/cms-composer-installers:^5.0 \
                  typo3/cms-backend:dev-main \
                  typo3/cms-recordlist:dev-main \
                  typo3/cms-frontend:dev-main \
                  typo3/cms-extbase:dev-main \
                  typo3/cms-fluid:dev-main \
                  typo3/cms-install:dev-main
               composer req typo3/cms-core:dev-main -W --no-update
           fi         
         
           composer update --no-progress --no-interaction;
         "

   composer_validate:
      image: typo3/core-testing-${DOCKER_PHP_IMAGE}:latest
      user: "${HOST_UID}"
      volumes:
         - ${ROOT_DIR}:${ROOT_DIR}
      working_dir: ${ROOT_DIR}
      extra_hosts:
         - "host.docker.internal:host-gateway"
      environment:
         COMPOSER_CACHE_DIR: ".Build/.cache/composer"
      command: >
         /bin/sh -c "
           if [ ${SCRIPT_VERBOSE} -eq 1 ]; then
             set -x
           fi
           php -v | grep '^PHP';
           composer validate --no-check-lock;
         "

   composer_normalize:
      image: typo3/core-testing-${DOCKER_PHP_IMAGE}:latest
      user: "${HOST_UID}"
      volumes:
         - ${ROOT_DIR}:${ROOT_DIR}
      working_dir: ${ROOT_DIR}
      extra_hosts:
         - "host.docker.internal:host-gateway"
      environment:
         COMPOSER_CACHE_DIR: ".Build/.cache/composer"
      command: >
         /bin/sh -c "
           if [ ${SCRIPT_VERBOSE} -eq 1 ]; then
             set -x
           fi
           php -v | grep '^PHP';
           composer normalize --no-check-lock --no-update-lock ${COMPOSER_NORMALIZE_DRY_RUN};
         "

   lint:
      image: typo3/core-testing-${DOCKER_PHP_IMAGE}:latest
      user: "${HOST_UID}"
      volumes:
         - ${ROOT_DIR}:${ROOT_DIR}
      working_dir: ${ROOT_DIR}
      extra_hosts:
         - "host.docker.internal:host-gateway"
      command: >
         /bin/sh -c "
           if [ ${SCRIPT_VERBOSE} -eq 1 ]; then
             set -x
           fi
           php -v | grep '^PHP';
           find . -name \\*.php ! -path "./.Build/\\*" -print0 | xargs -0 -n1 -P4 php -dxdebug.mode=off -l >/dev/null
         "

   unit:
      image: typo3/core-testing-${DOCKER_PHP_IMAGE}:latest
      user: "${HOST_UID}"
      volumes:
         - ${ROOT_DIR}:${ROOT_DIR}
      working_dir: ${ROOT_DIR}
      extra_hosts:
         - "host.docker.internal:host-gateway"
      command: >
         /bin/sh -c "
           if [ ${SCRIPT_VERBOSE} -eq 1 ]; then
             set -x
           fi
           php -v | grep '^PHP';
           if [ ${PHP_XDEBUG_ON} -eq 0 ]; then
             XDEBUG_MODE=\"off\" \
             .Build/bin/phpunit -c Build/php-unit/UnitTests.xml ${EXTRA_TEST_OPTIONS} ${TEST_FILE};
           else
             XDEBUG_MODE=\"debug,develop\" \
             XDEBUG_TRIGGER=\"foo\" \
             XDEBUG_CONFIG=\"client_port=${PHP_XDEBUG_PORT} client_host=host.docker.internal\" \
             .Build/bin/phpunit -c Build/php-unit/UnitTests.xml ${EXTRA_TEST_OPTIONS} ${TEST_FILE};
           fi
         "
